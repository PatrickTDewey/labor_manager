{"version":3,"sources":["components/WorkerForm.jsx","components/WorkerList.jsx","views/Main.js","components/NavBar.jsx","views/WorkerSchedule.jsx","components/EditWorkerForm.jsx","components/TimeForm.jsx","views/WorkerDetails.jsx","App.js","reportWebVitals.js","index.js"],"names":["WorkerForm","props","working","useState","firstName","lastName","availability","Array","fill","form","setForm","error","setError","useEffect","axios","get","then","res","keys","Object","data","clearObj","forEach","key","catch","err","console","log","changeHandler","e","target","name","value","onChangeBox","index","parseInt","newAvail","history","useHistory","onSubmit","preventDefault","post","push","errors","response","errorObj","entries","message","className","type","id","placeholder","onChange","htmlFor","style","color","checked","WorkerList","workers","onDelete","state","setState","idState","setIdState","map","worker","i","a","onClick","_id","to","Main","setWorkers","delete","filter","NavBar","WorkerSchedule","day","day_id","useParams","unavailable","setUnavailable","time","setTime","select","setSelect","sortFunc","b","sortNum","localeCompare","unsorted","sort","length","timeCopy","slice","indexOf","split","timeStr","amPm","hours","minutes","handleSelect","idx","filteredWorkers","put","handleClick","width","EditWorkerForm","setWorker","newWorking","TimeForm","setWorking","String","start","Date","end","setDate","obj","setMinutes","getMinutes","step","today","getDay","WorkerDetails","from","weekBreakdown","setWeekBreakdown","days","weekCopy","count","shifts","shiftIndex","lunchStart","workingKeys","lunchPeroid","lunch","item","breakdown","shift","lunchIdx","shiftIdx","Math","trunc","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.192af0b3.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport '../index.css'\r\nconst WorkerForm = (props) => {\r\n    const { working } = props\r\n    const [form, setForm] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        availability: Array(7).fill(true),\r\n        working\r\n    });\r\n    const [error, setError] = useState({});\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/one/worker\")\r\n            .then(res => {\r\n                let keys = Object.keys(res.data.working)\r\n                let clearObj = {}\r\n                keys.forEach(key => clearObj[key] = Array(7).fill(0))\r\n                setForm({ ...form, working: { ...clearObj } })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, []);\r\n\r\n    const changeHandler = (e) => {\r\n        const { name, value } = e.target\r\n        setForm({ ...form, [name]: value })\r\n    }\r\n    const onChangeBox = e => {\r\n        const { name } = e.target;\r\n        let index = parseInt(name)\r\n        let newAvail = [...form.availability]\r\n        newAvail[index] = !newAvail[index];\r\n        setForm({ ...form, availability: newAvail })\r\n    }\r\n\r\n    const history = useHistory();\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        axios.post(\"http://localhost:8000/api/workers/new\", form)\r\n            .then(res => history.push('/'))\r\n            .catch(err => {\r\n                const { errors } = err.response.data\r\n                let errorObj = {}\r\n                for (let [key, value] of Object.entries(errors)) {\r\n                    errorObj[key] = value.message\r\n                }\r\n                setError(errorObj)\r\n            })\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmitHandler} >\r\n            <div className=\"form-floating mb-3\">\r\n                <input type=\"text\" className=\"form-control\" name=\"firstName\" id=\"firstName\" placeholder=\"first name\" value={form.firstName} onChange={changeHandler} />\r\n                <label htmlFor=\"firstName\">First Name:</label>\r\n            </div>\r\n            {(error.firstName) ? <p style={{ color: 'red' }}>{error.firstName}</p> : null}\r\n            <div className=\"form-floating mb-3\">\r\n                <input type=\"text\" className=\"form-control\" name=\"lastName\" id=\"lastName\" placeholder=\"last name\" value={form.lastName} onChange={changeHandler} />\r\n                <label htmlFor=\"lastName\">Last Name:</label>\r\n            </div>\r\n            {(error.lastName) ? <p style={{ color: 'red' }}>{error.lastName}</p> : null}\r\n            <h4>Availability:</h4>\r\n            <div className=\"form-check\">\r\n                <label htmlFor='0' className='me-2 form-check-label'>Monday</label>\r\n                <input type='checkbox' className='form-check-input' name='0' checked={form.availability[0]} onChange={onChangeBox} />\r\n            </div>\r\n            <div className=\"form-check\">\r\n                <label htmlFor='1' className='me-2 form-check-label'>Tuesday</label>\r\n                <input type='checkbox' className='form-check-input' name='1' checked={form.availability[1]} onChange={onChangeBox} />\r\n            </div>\r\n            <div className=\"form-check\">\r\n                <label htmlFor='2' className='me-2 form-check-label'>Wednesday</label>\r\n                <input type='checkbox' className='form-check-input' name='2' checked={form.availability[2]} onChange={onChangeBox} />\r\n            </div>\r\n            <div className=\"form-check\">\r\n                <label htmlFor='3' className='me-2 form-check-label'>Thursday</label>\r\n                <input type='checkbox' className='form-check-input' name='3' checked={form.availability[3]} onChange={onChangeBox} />\r\n            </div>\r\n            <div className=\"form-check\">\r\n                <label htmlFor='4' className='me-2 form-check-label'>Friday</label>\r\n                <input type='checkbox' className='form-check-input' name='4' checked={form.availability[4]} onChange={onChangeBox} />\r\n            </div>\r\n            <div className=\"form-check\">\r\n                <label htmlFor='5' className='me-2 form-check-label'>Saturday</label>\r\n                <input type='checkbox' className='form-check-input' name='5' checked={form.availability[5]} onChange={onChangeBox} />\r\n            </div>\r\n            <div className=\"form-check\">\r\n                <label htmlFor='6' className='me-2 form-check-label'>Sunday</label>\r\n                <input type='checkbox' className='form-check-input' name='6' checked={form.availability[6]} onChange={onChangeBox} />\r\n            </div>\r\n            <input type=\"submit\" value=\"Add Worker\" className=\"btn btn-primary\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default WorkerForm\r\n","import { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nconst WorkerList = ({ workers, onDelete }) => {\r\n    const [state, setState] = useState(false)\r\n    const [idState, setIdState] = useState()\r\n    const clickHandler = (id) => {\r\n        setState(true)\r\n        setIdState(id)\r\n    }\r\n    const confirmDelete = () => {\r\n        setState(false)\r\n        onDelete(idState)\r\n        setIdState()\r\n    }\r\n    return (\r\n        <>\r\n            <table className={`table table-dark table-hover table-striped ` + (state ? `blur` : '')}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Worker Name</th>\r\n                        <th>Availability</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {workers.map((worker, i) => {\r\n                        return <tr key={i} >\r\n                            <td>{worker.firstName} {worker.lastName}</td>\r\n                            <td>{worker.availability.map((a,i) => {\r\n                                switch(i){\r\n                                    case 0:\r\n                                        return (a ? 'Monday ' : null)\r\n                                    case 1:\r\n                                        return (a ? 'Tuesday ' : null)\r\n                                    case 2:\r\n                                        return (a ? 'Wednesday ' : null)\r\n                                    case 3:\r\n                                        return (a ? 'Thursday ' : null)\r\n                                    case 4:\r\n                                        return (a ? 'Friday ' : null)\r\n                                    case 5:\r\n                                        return (a ? 'Saturday ' : null)\r\n                                    case 6:\r\n                                        return (a ? 'Sunday ' : null )\r\n                                    default:\r\n                                        return null;\r\n                                }\r\n                            })}</td>\r\n                            <td>\r\n                                <button  onClick={() => clickHandler(worker._id)}className=\"btn btn-danger me-2\">Delete</button>\r\n                                <Link to={`/workers/edit/${worker._id}`} className=\"btn btn-warning me-2\">Edit</Link>\r\n                                <Link to={`/workers/details/${worker._id}`} className=\"btn btn-primary\">Details</Link>\r\n                            </td>\r\n                            \r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            {state ? <div className=\"container-sm alert-box\">\r\n                <h3>Are you sure you want to delete?</h3>\r\n                <button className=\"btn btn-danger me-2\" onClick={confirmDelete}>Yes</button>\r\n                <button className=\"btn btn-warning\" onClick={() => setState(false)}>No</button>\r\n            </div>:null}\r\n        </>\r\n    )\r\n}\r\n// onClick={() => onDelete(worker._id)}\r\nexport default WorkerList\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport WorkerList from '../components/WorkerList'\r\nconst Main = () => {\r\n  const [workers, setWorkers] = useState([])\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:8000/api/workers/\")\r\n      .then(res => setWorkers(res.data))\r\n  }, []);\r\n  const deleteWorker = ( id ) => {\r\n    axios.delete(`http://localhost:8000/api/workers/delete/${id}`)\r\n    setWorkers(workers.filter(worker => worker._id !== id))\r\n  }\r\n  \r\n  return (\r\n    <div className=\"relative\">\r\n      <WorkerList workers={workers} onDelete={deleteWorker}/>\r\n    </div>\r\n  )\r\n}\r\nexport default Main\r\n\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div>\r\n            <Link to='/' className=\"ms-2 btn btn-link\">Home</Link>\r\n            <Link to='/schedule/day/1' className=\"ms-2 btn btn-link\">View Schedule</Link>\r\n            <Link to='/adjust_hours' className=\"ms-2 btn btn-link\">Adjust Hours</Link>\r\n            <Link to='/workers/add' className=\"btn btn-link\">Add Worker</Link> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport '../index.css'\r\n\r\nconst WorkerSchedule = () => {\r\n\r\n    const { day_id } = useParams();\r\n    let day;\r\n    switch (parseInt(day_id)) {\r\n        case 1:\r\n            day = 'Monday';\r\n            break;\r\n\r\n        case 2:\r\n            day = 'Tuesday';\r\n            break;\r\n\r\n        case 3:\r\n            day = 'Wednesday';\r\n            break;\r\n\r\n        case 4:\r\n            day = 'Thursday';\r\n            break;\r\n\r\n        case 5:\r\n            day = 'Friday';\r\n            break;\r\n\r\n        case 6:\r\n            day = 'Saturday';\r\n            break;\r\n        case 7:\r\n            day = 'Sunday';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    const [workers, setWorkers] = useState();\r\n    const [unavailable, setUnavailable] = useState([])\r\n    const [time, setTime] = useState([])\r\n    const [select, setSelect] = useState('24')\r\n    const sortFunc = (a, b) => {\r\n        let sortNum = a.lastName.localeCompare(b.lastName)\r\n        if (sortNum !== 0) {\r\n            return sortNum\r\n        }\r\n        if (a._id < b._id) {\r\n            return -1\r\n        }\r\n        return 1;\r\n    }\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/workers\")\r\n            .then(res => {\r\n                let unsorted = res.data\r\n                // availability\r\n                setWorkers(unsorted.filter(worker => worker.availability[day_id - 1]).sort((a, b) => sortFunc(a, b)))\r\n                setUnavailable(unsorted.filter(worker => !(worker.availability[day_id - 1])))\r\n                setTime(time.length > 1 ? time : Object.keys(res.data[0].working));\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [day_id, time])\r\n    const handleClick = (e, worker, key) => {\r\n        let filteredWorkers = workers.filter(a => worker._id !== a._id)\r\n        if (worker.working[key][day_id - 1] < 2) {\r\n            worker.working[key][day_id - 1] += parseInt(e.target.value)\r\n        } else {\r\n            worker.working[key][day_id - 1] = 0\r\n        }\r\n\r\n        axios.put('http://localhost:8000/api/workers/update/' + worker._id, worker)\r\n            .then(res => {\r\n                let unsorted = [...filteredWorkers, worker]\r\n                setWorkers(unsorted.sort((a, b) => sortFunc(a, b)))\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    const handleSelect = (e) => {\r\n        e.preventDefault()\r\n        setSelect(e.target.value)\r\n        let timeCopy = [...time]\r\n        if (e.target.value === '12') {\r\n            setTime(timeCopy.map(time => ((parseInt(time) + 11) % 12 + 1) + time.slice(time.indexOf(':')) + (parseInt(time) >= 12 ? ' PM' : ' AM')))\r\n        } else {\r\n            setTime(timeCopy.map(time => {\r\n                const [timeStr, amPm] = time.split(' ');\r\n                let [hours, minutes] = timeStr.split(':');\r\n                if (amPm === 'AM' && hours.length === 1) {\r\n                    hours = '0' + hours;\r\n                }\r\n                if (parseInt(hours) === 12) {\r\n                    hours = '00'\r\n                }\r\n                if (amPm === 'PM') {\r\n                    hours = parseInt(hours) + 12\r\n                }\r\n                return `${hours}:${minutes}`\r\n            }))\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {workers &&\r\n                <>\r\n                    <h1> Worker Status - {day} </h1>\r\n                    <select name=\"time-format\" id=\"time-format\" value={select} onChange={e => handleSelect(e)}>\r\n                        <option value=\"24\">Military</option>\r\n                        <option value=\"12\" >12 Hour</option>\r\n                    </select>\r\n                    <div className=\"d-flex\">\r\n                        <Link className=\"me-2 \" to='/schedule/day/1'>Mon</Link>\r\n                        <Link className=\"me-2 \" to='/schedule/day/2'>Tues</Link>\r\n                        <Link className=\"me-2 \" to='/schedule/day/3'>Wed</Link>\r\n                        <Link className=\"me-2 \" to='/schedule/day/4'>Thurs</Link>\r\n                        <Link className=\"me-2 \" to='/schedule/day/5'>Fri</Link>\r\n                        <Link className=\"me-2 \" to='/schedule/day/6'>Sat</Link>\r\n                        <Link className=\"me-2\" to='/schedule/day/7'>Sun</Link>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-dark table-hover table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Worker Name</th>\r\n                                    {\r\n                                        time.map((key, i) => <th className=\"vertical-top\" key={i}>{key}</th>)\r\n                                    }\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {workers && workers.map((worker, i) => {\r\n                                    return <tr key={i}>\r\n                                        <td><Link className=\"text-light\"to={`/workers/details/${worker._id}`}>{worker.firstName} {worker.lastName}</Link></td>\r\n                                        {Object.keys(worker.working).map((key, idx) => <td key={idx}><button onClick={(e) => { handleClick(e, worker, key) }} style={{width: '100%'}}className={parseInt(worker.working[key][day_id - 1]) === 0 ? 'btn btn-danger' : parseInt(worker.working[key][day_id - 1]) === 1 ? 'btn btn-primary' : 'btn btn-warning'} value={1}></button></td>)}\r\n                                    </tr>\r\n                                })}\r\n                                {/* comment */}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"legend d-flex align-items-center justify-content-center\">\r\n                        <span className='btn btn-primary me-2' style={{ 'cursor': 'auto' }} ></span>\r\n                        <span className=\"me-2\">Working</span>\r\n                        <span className='btn btn-danger me-2' style={{ 'cursor': 'auto' }}></span>\r\n                        <span className=\"me-2\">Not scheduled</span>\r\n                        <span className='btn btn-warning me-2' style={{ 'cursor': 'auto' }}></span>\r\n                        <span>Lunch</span>\r\n                    </div>\r\n                    {unavailable.length >= 1 ?\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-hover table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Unavailable Workers</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {unavailable.map((worker, i) => <tr key={i}>\r\n                                    <td><Link className=\"btn-link\"to={`/workers/details/${worker._id}`}>{worker.firstName} {worker.lastName}</Link></td>\r\n                                    </tr>)}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        : <h3 className=\"h5 text-success\">*All Workers Available for {day}*</h3>}\r\n                </>\r\n\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorkerSchedule\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport '../index.css'\r\n\r\nconst EditWorkerForm = (props) => {\r\n    const [worker, setWorker] = useState();\r\n    const [error, setError] = useState({})\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/workers/\" + id)\r\n            .then(res => setWorker(res.data))\r\n            .catch(err => console.log(err))\r\n    }, [id]);\r\n\r\n    const changeHandler = (e) => {\r\n        const { name, value } = e.target\r\n        setWorker({ ...worker, [name]: value })\r\n    }\r\n    const onChangeBox = e => {\r\n        const { name } = e.target;\r\n        let index = parseInt(name)\r\n        let newAvail = [...worker.availability]\r\n        let newWorking ={...worker.working}\r\n        for (let time in newWorking){\r\n            newWorking[time][index] = 0\r\n        }\r\n        newAvail[index] = !newAvail[index];\r\n        setWorker({ ...worker, availability: newAvail, working: newWorking })\r\n    }\r\n\r\n\r\n    const history = useHistory();\r\n    const onSubmitHandler = e => {\r\n\r\n        e.preventDefault();\r\n        axios.put(\"http://localhost:8000/api/workers/update/\" + id, worker)\r\n            .then(res => history.push('/'))\r\n            .catch(err => {\r\n                const { errors } = err.response.data\r\n                let errorObj = {}\r\n                for (let [key, value] of Object.entries(errors)) {\r\n                    errorObj[key] = value.message\r\n                }\r\n                setError(errorObj)\r\n            })\r\n\r\n    }\r\n    return (\r\n        <>\r\n            {worker ?\r\n                <form onSubmit={onSubmitHandler} >\r\n                    <div className=\"form-floating mb-3\">\r\n                        <input type=\"text\" className=\"form-control\" name=\"firstName\" id=\"firstName\" placeholder=\"first name\" value={worker.firstName} onChange={changeHandler} />\r\n                        <label htmlFor=\"firstName\">First Name:</label>\r\n                    </div>\r\n                    {(error.firstName) ? <p style={{ color: 'red' }}>{error.firstName}</p> : null}\r\n\r\n                    <div className=\"form-floating mb-3\">\r\n                        <input type=\"text\" className=\"form-control\" name=\"lastName\" id=\"lastName\" placeholder=\"last name\" value={worker.lastName} onChange={changeHandler} />\r\n                        <label htmlFor=\"lastName\">Last Name:</label>\r\n                    </div>\r\n                    {(error.lastName) ? <p style={{ color: 'red' }}>{error.lastName}</p> : null}\r\n\r\n                    <h4>Availability:</h4>\r\n                    <div className=\"form-check\">\r\n                        <label htmlFor='0' className='me-2 form-check-label'>Monday</label>\r\n                        <input type='checkbox' className='form-check-input' name='0' checked={worker.availability[0]} onChange={onChangeBox} />\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                        <label htmlFor='1' className='me-2 form-check-label'>Tuesday</label>\r\n                        <input type='checkbox' className='form-check-input' name='1' checked={worker.availability[1]} onChange={onChangeBox} />\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                        <label htmlFor='2' className='me-2 form-check-label'>Wednesday</label>\r\n                        <input type='checkbox' className='form-check-input' name='2' checked={worker.availability[2]} onChange={onChangeBox} />\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                        <label htmlFor='3' className='me-2 form-check-label'>Thursday</label>\r\n                        <input type='checkbox' className='form-check-input' name='3' checked={worker.availability[3]} onChange={onChangeBox} />\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                        <label htmlFor='4' className='me-2 form-check-label'>Friday</label>\r\n                        <input type='checkbox' className='form-check-input' name='4' checked={worker.availability[4]} onChange={onChangeBox} />\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                        <label htmlFor='5' className='me-2 form-check-label'>Saturday</label>\r\n                        <input type='checkbox' className='form-check-input' name='5' checked={worker.availability[5]} onChange={onChangeBox} />\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                        <label htmlFor='6' className='me-2 form-check-label'>Sunday</label>\r\n                        <input type='checkbox' className='form-check-input' name='6' checked={worker.availability[6]} onChange={onChangeBox} />\r\n                    </div>\r\n                    <h3 style={{color:'red'}}> Submitting after toggling availability will reset schedule for that day </h3>\r\n                    <input type=\"submit\" value=\"Edit\" className=\"btn btn-primary\" />\r\n                </form>\r\n\r\n                : null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditWorkerForm\r\n","import axios from 'axios';\r\nimport React, {useState} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst TimeForm = (props) => {\r\n    const {setWorking} = props;\r\n    const [form, setForm] = useState();\r\n    const history = useHistory();\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        let key = String(e.target.start.value)\r\n        let start = new Date(1,1,1, e.target.start.value.slice(0,2), e.target.start.value.slice(3),0,0)\r\n        let end = new Date(1,1,1, e.target.end.value.slice(0,2), e.target.end.value.slice(3),0,0)\r\n        if (end < start){\r\n            end.setDate(2)\r\n        }\r\n        console.log(start)\r\n        let obj = {}\r\n        obj[key] = Array(7).fill(0)\r\n        while (start < end){\r\n            start.setMinutes( start.getMinutes() + 30)\r\n            obj[String(start).slice(16,21)] = Array(7).fill(0)\r\n        }\r\n        setWorking(obj)\r\n        axios.put('http://localhost:8000/api/workers/update_all', obj)\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err))\r\n        history.push('/')\r\n    }\r\n    const changeHandler = (e) =>{\r\n        const {name, value} = e.target\r\n        setForm({...form, [name]: value})\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Set Hours</h1>\r\n            <h3>Warning: changing hours of operation will reset the schedule</h3>\r\n            <form onSubmit={submitHandler}>\r\n                <label htmlFor=\"start\" className=\"me-2\">Start Time:</label>\r\n                <input type=\"time\" name=\"start\" onChange={changeHandler} step=\"1800\"/>\r\n                <label htmlFor=\"end\" className=\"me-2\">End Time:</label>\r\n                <input type=\"time\" name=\"end\" onChange={changeHandler} step=\"1800\"></input>\r\n                <button className=\"btn btn-primary ms-2\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimeForm\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useState, useEffect } from 'react'\r\nimport axios from \"axios\"\r\n// add if today shift has passed\r\nlet today = new Date().getDay()\r\nif (parseInt(today) === 0) {\r\n    today = 6\r\n}\r\nelse if (parseInt(today) === 6) {\r\n    today = 0\r\n}\r\n\r\n\r\nconst WorkerDetails = () => {\r\n    const [worker, setWorker] = useState({})\r\n    const { id } = useParams()\r\n    const [weekBreakdown, setWeekBreakdown] = useState(Array.from({ length: 7 }, () => ({})))\r\n    let days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/workers/\" + id)\r\n            .then(res => {\r\n                let weekCopy = [...weekBreakdown]\r\n                for (let i = 0; i < days.length; i++) {\r\n                    let count = 0.0;\r\n                    weekCopy[i].shifts = []\r\n                    let shiftIndex = 0\r\n                    let lunchStart = '';\r\n                    //['key']\r\n                    let workingKeys = Object.keys(res.data.working)\r\n                    workingKeys.forEach((key, idx) => {\r\n                        if (!weekCopy[i].shifts[shiftIndex] && res.data.working[key][i] === 1) {\r\n                            weekCopy[i].shifts[shiftIndex] = {\r\n                                start: key,\r\n                                end: key,\r\n                                lunch: []\r\n                            }\r\n                            weekCopy[i].day = days[i];\r\n                            count = count + 0.5\r\n\r\n                        }\r\n                        else if (res.data.working[key][i] === 1 && weekCopy[i].shifts[shiftIndex]) {\r\n                            weekCopy[i].shifts[shiftIndex].end = key\r\n                            count = count + 0.5\r\n                            lunchStart = '';\r\n                        }\r\n                        else if (res.data.working[key][i] === 2 && weekCopy[i].shifts[shiftIndex]) {\r\n                            lunchStart = !lunchStart ? key : lunchStart\r\n                            while (res.data.working[workingKeys[idx + 1]][i] === 2) {\r\n                                idx++\r\n                            }\r\n\r\n                            let lunchPeroid = `${lunchStart}-${workingKeys[idx + 1]} `\r\n                            let index = weekCopy[i].shifts[shiftIndex].lunch.indexOf(lunchPeroid)\r\n                            if (index === -1) {\r\n                                weekCopy[i].shifts[shiftIndex].lunch.push(`${lunchStart}-${workingKeys[idx + 1]} `)\r\n                            }\r\n                        } else if (res.data.working[key][i] === 0 && weekCopy[i].shifts[shiftIndex]) {\r\n                            shiftIndex++\r\n                        }\r\n\r\n                    })\r\n                    weekCopy[i].hours = count\r\n                    weekCopy[i].shifts.map(item => {\r\n                        let [hours, minutes] = item.end.split(':');\r\n                        return parseInt(minutes) === 30 ? item.end = `${parseInt(hours) + 1}:00` : item.end = `${hours}:30`\r\n                    })\r\n\r\n                    setWeekBreakdown(weekCopy)\r\n                }\r\n                setWorker(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [id]);\r\n    return (\r\n        worker ?\r\n            <div className=\"container my-4\">\r\n                <h1 className=\"text-center mt-2 display-2\">Hour Breakdown For {worker.firstName} {worker.lastName}</h1>\r\n                <hr />\r\n                {weekBreakdown.filter((item, idx) => item.hours > 0 && (today - 1) === idx).map((breakdown, i) => {\r\n                    return <div className=\"row mx-0 justify-content-center bg-dark text-light mb-5\" key={i}>\r\n                        <h3 className=\"display-3 text-center text-info\">Today's Schedule</h3>{breakdown.shifts.length > 1 && <><small className=\"text-secondary\">({breakdown.shifts.length} Total)</small><br /></>}\r\n                        <hr />\r\n                        {breakdown.shifts.map((shift, i) => {\r\n                            return <div key={i} className={'col-sm-auto'}>\r\n                                <strong className=\"text-warning h3\">{breakdown.shifts.length > 1 ? `Shift #${i + 1}` : `Shift`}:</strong>\r\n                                <p className=\"h3 mt-2\">Start: {shift.start}</p>\r\n                                <p className=\"h3\">End: {shift.end}</p>\r\n                                {shift.lunch.length >= 1 ? shift.lunch.map((lunch, lunchIdx) => {\r\n                                    return <div key={lunchIdx}>\r\n                                        {lunchIdx === 0 && <strong className=\"h3 text-info\">Lunch Breaks:</strong>}\r\n                                        <p className=\"h3\"><span className=\"h3 text-warning\">#{lunchIdx + 1}:</span> {lunch}</p>\r\n                                    </div>\r\n                                }) : <strong className=\" h3 text-danger\">No Lunch Taken</strong>}\r\n                            </div>\r\n                        })}\r\n                        <hr />\r\n                    </div>\r\n                })}\r\n                <div className=\"row gx-4\">\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"bg-dark p-5 text-light\">\r\n                            <h3 className=\"h3 text-info\">Days Worked This Week</h3>\r\n                            <hr />\r\n                            {weekBreakdown.filter((item, idx) => item.hours > 0 && (today - 1) > idx).map((breakdown, i) => {\r\n                                return <div key={i}>\r\n                                    <h3 className=\"h4 text-info\">{breakdown.day} </h3>{breakdown.shifts.length > 1 && <><small className=\"text-secondary\">({breakdown.shifts.length} Total)</small><br /></>}\r\n                                    <div className=\"row\">\r\n                                        {breakdown.shifts.map((shift, shiftIdx) => {\r\n                                            return breakdown.shifts.length > 1 ?\r\n                                                <div key={shiftIdx} className={`col-sm-` + (Math.trunc(12 / breakdown.shifts.length))}>\r\n                                                    <strong className=\"text-warning\">Shift #{shiftIdx + 1}:</strong>\r\n                                                    <p className=\"mt-2\">Start: {shift.start}</p>\r\n                                                    <p className=\"\">End: {shift.end}</p>\r\n\r\n                                                    {shift.lunch.length >= 1 ? shift.lunch.map((lunch, lunchIdx) => {\r\n                                                        return <div key={lunchIdx}>\r\n                                                            {lunchIdx === 0 && <strong className=\"text-info\">Lunch Breaks:</strong>}\r\n                                                            <p ><span className=\"text-warning\">#{lunchIdx + 1}:</span> {lunch}</p>\r\n                                                        </div>\r\n                                                    }) : <strong className=\"text-danger\">No Lunch Taken</strong>}\r\n                                                </div>\r\n                                                : <div key={shiftIdx} className=\"col-sm-12\">\r\n                                                    <strong className=\"text-warning\">Shift:</strong>\r\n                                                    <p className=\" mt-2\">Start: {shift.start}</p>\r\n                                                    <p className=\"\">End: {shift.end}</p>\r\n                                                    {shift.lunch.length >= 1 ? shift.lunch.map((lunch, lunchIdx) => {\r\n                                                        return <div key={lunchIdx}>\r\n                                                            {lunchIdx === 0 && <strong className=\"text-info\">Lunch Breaks:</strong>}\r\n                                                            <p ><span className=\"text-warning\">#{lunchIdx + 1}:</span> {lunch}</p>\r\n                                                        </div>\r\n                                                    }) : <strong className=\"text-danger\">No Lunch Taken</strong>}\r\n                                                </div>\r\n                                        })}\r\n                                    </div>\r\n                                    <strong className=\"text-info\">Hours Worked: {breakdown.hours}</strong>\r\n                                    <hr />\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"bg-dark p-5 text-light\">\r\n                            <h3 className=\"h3 text-info\">Upcoming Shifts This Week</h3>\r\n                            <hr />\r\n                            {weekBreakdown.filter((item, idx) => item.hours > 0 && today <= idx).map((breakdown, i) => {\r\n                                return <div key={i}>\r\n                                    <h3 className=\"h4 text-info\">{breakdown.day} </h3>{breakdown.shifts.length > 1 && <><small className=\"text-secondary\">({breakdown.shifts.length} Total)</small><br /></>}\r\n                                    <div className=\"row\">\r\n                                        {breakdown.shifts.map((shift, shiftIdx) => {\r\n                                            return breakdown.shifts.length > 1 ?\r\n                                                <div key={shiftIdx} className={`col-sm-` + (Math.trunc(12 / breakdown.shifts.length))}>\r\n                                                    <strong className=\"text-warning\">Shift #{shiftIdx + 1}:</strong>\r\n                                                    <p className=\"mt-2\">Start: {shift.start}</p>\r\n                                                    <p className=\"\">End: {shift.end}</p>\r\n\r\n                                                    {shift.lunch.length >= 1 ? shift.lunch.map((lunch, lunchIdx) => {\r\n                                                        return <div key={lunchIdx}>\r\n                                                            {lunchIdx === 0 && <strong className=\"text-info\">Lunch Breaks:</strong>}\r\n                                                            <p ><span className=\"text-warning\">#{lunchIdx + 1}:</span> {lunch}</p>\r\n                                                        </div>\r\n                                                    }) : <strong className=\"text-danger\">No Lunch Taken</strong>}\r\n                                                </div>\r\n                                                : <div key={shiftIdx} className=\"col-sm-12\">\r\n                                                    <strong className=\"text-warning\">Shift:</strong>\r\n                                                    <p className=\" mt-2\">Start: {shift.start}</p>\r\n                                                    <p className=\"\">End: {shift.end}</p>\r\n                                                    {shift.lunch.length >= 1 ? shift.lunch.map((lunch, lunchIdx) => {\r\n                                                        return <div key={lunchIdx}>\r\n                                                            {lunchIdx === 0 && <strong className=\"text-info\">Lunch Breaks:</strong>}\r\n                                                            <p ><span className=\"text-warning\">#{lunchIdx + 1}:</span> {lunch}</p>\r\n                                                        </div>\r\n                                                    }) : <strong className=\"text-danger\">No Lunch Taken</strong>}\r\n                                                </div>\r\n                                        })}\r\n                                    </div>\r\n                                    <strong className=\"text-info\">Hours Scheduled: {breakdown.hours}</strong>\r\n                                    <hr />\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            : null\r\n    )\r\n}\r\n\r\nexport default WorkerDetails\r\n","import {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport WorkerForm from './components/WorkerForm';\r\nimport Main from './views/Main';\r\nimport NavBar from './components/NavBar';\r\nimport WorkerSchedule from './views/WorkerSchedule'\r\nimport EditWorkerForm from './components/EditWorkerForm'\r\nimport TimeForm from './components/TimeForm';\r\nimport WorkerDetails from './views/WorkerDetails';\r\nimport React, {useState} from 'react'\r\n\r\n//pair programmed by Patrick Dewey and Spencer Rauch\r\n\r\nfunction App() {\r\n  const [working, setWorking] = useState({\r\n    '9:00': Array(7).fill(0),\r\n    '9:30': Array(7).fill(0),\r\n    '10:00': Array(7).fill(0),\r\n    '10:30': Array(7).fill(0),\r\n    '11:00': Array(7).fill(0),\r\n    '11:30': Array(7).fill(0),\r\n    '12:00': Array(7).fill(0),\r\n    '12:30': Array(7).fill(0),\r\n    '13:00': Array(7).fill(0),\r\n    '13:30': Array(7).fill(0),\r\n    '14:00': Array(7).fill(0),\r\n    '14:30': Array(7).fill(0),\r\n    '15:00': Array(7).fill(0),\r\n    '15:30': Array(7).fill(0),\r\n    '16:00': Array(7).fill(0),\r\n    '16:30': Array(7).fill(0),\r\n    '17:00': Array(7).fill(0),\r\n    '17:30': Array(7).fill(0),\r\n    '18:00': Array(7).fill(0),\r\n    '18:30': Array(7).fill(0),\r\n    '19:00': Array(7).fill(0),\r\n    '19:30': Array(7).fill(0),\r\n    '20:00': Array(7).fill(0),\r\n    '20:30': Array(7).fill(0),\r\n    '21:00': Array(7).fill(0),\r\n    '21:30': Array(7).fill(0),\r\n    '22:00': Array(7).fill(0),\r\n})\r\n  return (\r\n    <div className=\"container\">\r\n      <BrowserRouter>\r\n          <NavBar />\r\n        <Switch>\r\n          <Route exact path='/schedule/day/:day_id'> \r\n            <WorkerSchedule />\r\n          </Route>\r\n          <Route exact path='/adjust_hours'> \r\n            <TimeForm setWorking={setWorking}/>\r\n          </Route>\r\n          <Route exact path='/workers/add'>\r\n            <WorkerForm working={working} />\r\n          </Route>\r\n          <Route exact path='/workers/edit/:id'>\r\n            <EditWorkerForm/>\r\n          </Route>\r\n          <Route exact path='/workers/details/:id'>\r\n            <WorkerDetails/>\r\n          </Route>\r\n          <Route exact path='/'>\r\n            <Main />\r\n          </Route>\r\n\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}